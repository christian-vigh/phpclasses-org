<?php
	// Adobe standard character sets (Standard, Mac, Windows, Pdf)
	$adobe_charsets 	=  array
	   (
		'A'			=>  array ( 0101, 0101, 0101, 0101 ),
	   	'AE'			=>  array ( 0341, 0256, 0306, 0306 ),
	   	'Aacute'		=>  array (    0, 0347, 0301, 0301 ),
	   	'Acircumflex'		=>  array (    0, 0345, 0302, 0302 ),
		'Adieresis'		=>  array (    0, 0200, 0304, 0304 ),
		'Agrave'		=>  array (    0, 0313, 0300, 0300 ),
		'Aring'			=>  array (    0, 0201, 0305, 0305 ),
		'Atilde'		=>  array (    0, 0314, 0303, 0303 ),
		'B'			=>  array ( 0102, 0102, 0102, 0102 ),
	   	'C' 			=>  array ( 0103, 0103, 0103, 0103 ),
		'Ccedilla'		=>  array (    0, 0202, 0307, 0307 ),
		'D'			=>  array ( 0104, 0104, 0104, 0104 ),
	   	'E' 			=>  array ( 0105, 0105, 0105, 0105 ),
		'Eacute'		=>  array (    0, 0203, 0311, 0311 ),
		'Ecircumflex'		=>  array (    0, 0346, 0312, 0312 ),
		'Edieresis'		=>  array (    0, 0350, 0313, 0313 ),
		'Egrave'		=>  array (    0, 0351, 0310, 0310 ),
		'Eth' 			=>  array (    0,    0, 0320, 0320 ),
		'Euro'			=>  array (    0,    0, 0200, 0240 ),
		'F'			=>  array ( 0106, 0106, 0106, 0106 ),
		'G'			=>  array ( 0107, 0107, 0107, 0107 ),
		'H'			=>  array ( 0110, 0110, 0110, 0110 ),
		'I'			=>  array ( 0111, 0111, 0111, 0111 ),
	   	'Iacute'		=>  array (    0, 0352, 0315, 0315 ),
	   	'Icircumflex'		=>  array (    0, 0353, 0316, 0316 ),
		'Idieresis'		=>  array (    0, 0354, 0317, 0317 ),
		'Igrave'		=>  array (    0, 0355, 0314, 0314 ),
		'J'			=>  array ( 0112, 0112, 0112, 0112 ),
		'K'			=>  array ( 0113, 0113, 0113, 0113 ),
		'L'			=>  array ( 0114, 0114, 0114, 0114 ),
		'Lslash'		=>  array ( 0x0141, 0x0141, 0x0141, 0x0141 ),
		'M'			=>  array ( 0115, 0115, 0115, 0115 ),
		'N'			=>  array ( 0116, 0116, 0116, 0116 ),
		'Ntilde'		=>  array (    0, 0204, 0321, 0321 ),
	   	'O'			=>  array ( 0117, 0117, 0117, 0117 ),
		'OE' 			=>  array ( 0352, 0316, 0214, 0226 ),
		'Oacute' 		=>  array (    0, 0356, 0323, 0323 ),
		'Ocircumflex'		=>  array (    0, 0357, 0324, 0324 ),
		'Odieresis'		=>  array (    0, 0205, 0326, 0326 ),
		'Ograve'		=>  array (    0, 0361, 0322, 0322 ),
		'Oslash' 		=>  array ( 0351, 0257, 0330, 0330 ),
		'Otilde' 		=>  array (    0, 0315, 0325, 0325 ),
	   	'P'			=>  array ( 0120, 0120, 0120, 0120 ),
	   	'Q'			=>  array ( 0121, 0121, 0121, 0121 ),
	   	'R'			=>  array ( 0122, 0122, 0122, 0122 ),
	   	'S'			=>  array ( 0123, 0123, 0123, 0123 ),
		'Scaron'		=>  array (    0,    0, 0212, 0227 ),
		'T'			=>  array ( 0124, 0124, 0124, 0124 ),
		'Thorn'			=>  array (    0,    0, 0336, 0336 ),
		'U'			=>  array ( 0125, 0125, 0125, 0125 ),
		'Uacute'		=>  array (    0, 0362, 0332, 0332 ),
		'Ucircumflex'		=>  array (    0, 0363, 0333, 0333 ),
		'Udieresis'		=>  array (    0, 0206, 0334, 0334 ),
		'Ugrave'		=>  array (    0, 0364, 0331, 0331 ),
		'V'			=>  array ( 0126, 0126, 0126, 0126 ),
		'W'			=>  array ( 0127, 0127, 0127, 0127 ),
		'X'			=>  array ( 0130, 0130, 0130, 0130 ),
		'Y'			=>  array ( 0131, 0131, 0131, 0131 ),
		'Yacute'		=>  array (    0,    0, 0335, 0335 ),
		'Ydieresis'		=>  array (    0, 0331, 0237, 0230 ),
		'Z'			=>  array ( 0132, 0132, 0132, 0132 ),
	   	'Zcaron'		=>  array (    0,    0, 0216, 0231 ),
		'a' 			=>  array ( 0141, 0141, 0141, 0141 ),
		'aacute'		=>  array (    0, 0207, 0341, 0341 ),
		'acircumflex'		=>  array (    0, 0211, 0342, 0342 ),
		'acute'			=>  array ( 0302, 0253, 0264, 0264 ),
		'adieresis'		=>  array (    0, 0212, 0344, 0344 ),
		'ae'			=>  array ( 0361, 0276, 0346, 0346 ),
		'agrave' 		=>  array (    0, 0210, 0340, 0340 ),
		'ampersand' 		=>  array ( 0046, 0046, 0046, 0046 ),
		'aring' 		=>  array (    0, 0214, 0345, 0345 ),
		'asciicircum' 		=>  array ( 0136, 0136, 0136, 0136 ),
		'asciitilde'		=>  array ( 0176, 0176, 0176, 0176 ),
		'asterisk' 		=>  array ( 0052, 0052, 0052, 0052 ),
		'at'			=>  array ( 0100, 0100, 0100, 0100 ),
		'atilde'		=>  array (    0, 0213, 0343, 0343 ),
		'b' 			=>  array ( 0142, 0142, 0142, 0142 ),
		'backslash' 		=>  array ( 0134, 0134, 0134, 0134 ),
		'bar' 			=>  array ( 0174, 0174, 0174, 0174 ),
		'braceleft'		=>  array ( 0173, 0173, 0173, 0173 ),
		'braceright' 		=>  array ( 0175, 0175, 0175, 0175 ),
		'bracketleft' 		=>  array ( 0133, 0133, 0133, 0133 ),
		'bracketright' 		=>  array ( 0135, 0135, 0135, 0135 ),
		'breve'			=>  array ( 0306, 0371,    0, 0030 ),
		'brokenbar' 		=>  array (    0,    0, 0246, 0246 ),
		'bullet' 		=>  array ( 0267, 0245, 0225, 0200 ),
		'c'			=>  array ( 0143, 0143, 0143, 0143 ),
		'caron'			=>  array ( 0317, 0377,    0, 0031 ),
		'ccedilla'		=>  array (    0, 0215, 0347, 0347 ),
		'cedilla'		=>  array ( 0313, 0374, 0270, 0270 ),
		'cent' 			=>  array ( 0242, 0242, 0242, 0242 ),
		'circumflex' 		=>  array ( 0303, 0366, 0210, 0032 ),
		'colon' 		=>  array ( 0072, 0072, 0072, 0072 ),
		'comma'			=>  array ( 0054, 0054, 0054, 0054 ),
		'copyright'		=>  array (    0, 0251, 0251, 0251 ),
		'currency'		=>  array ( 0250, 0333, 0244, 0244 ),
		'd'			=>  array ( 0144, 0144, 0144, 0144 ),
		'dagger' 		=>  array ( 0262, 0240, 0206, 0201 ),
		'daggerdbl' 		=>  array ( 0263, 0340, 0207, 0202 ),
		'degree' 		=>  array (    0, 0241, 0260, 0260 ),
		'dieresis'		=>  array ( 0310, 0254, 0250, 0250 ),
		'divide' 		=>  array (    0, 0326, 0367, 0367 ),
		'dollar' 		=>  array ( 0044, 0044, 0044, 0044 ),
		'dotaccent' 		=>  array ( 0307, 0372,    0, 0033 ),
		'dotlessi'		=>  array ( 0365, 0365, 0x131, 0232 ),
		'e' 			=>  array ( 0145, 0145, 0145, 0145 ),
		'eacute'		=>  array (    0, 0216, 0351, 0351 ),
		'ecircumflex'		=>  array (    0, 0220, 0352, 0352 ),
		'edieresis' 		=>  array (    0, 0221, 0353, 0353 ),
		'egrave'		=>  array (    0, 0217, 0350, 0350 ),
		'eight' 		=>  array ( 0070, 0070, 0070, 0070 ),
		'elipsis' 		=>  array ( 0x2026, 0x2026, 0x2026, 0x2026 ),
		'ellipsis' 		=>  array ( 0x2026, 0x2026, 0x2026, 0x2026 ),
		'emdash' 		=>  array ( 0x2D, 0x2D, 0x2D, 0x2D ),
		'endash' 		=>  array ( 0x2D, 0x2D, 0x2D, 0x2D ),
		'equal' 		=>  array ( 0075, 0075, 0075, 0075 ),
		'eth'			=>  array (    0,    0, 0360, 0360 ),
		'exclam' 		=>  array ( 0041, 0041, 0041, 0041 ),
		'exclamdown' 		=>  array ( 0241, 0301, 0241, 0241 ),
		'f' 			=>  array ( 0146, 0146, 0146, 0146 ),
		'fi' 			=>  array ( 0256, 0336, 0xFB01, 0223 ),
		'five' 			=>  array ( 0065, 0065, 0065, 0065 ),
		'fl' 			=>  array ( 0257, 0337, 0xFB02, 0224 ),
		'florin' 		=>  array ( 0246, 0304, 0203, 0206 ),
		'four'			=>  array ( 0064, 0064, 0064, 0064 ),
		'fraction'		=>  array ( 0244, 0332,    0, 0207 ),
		'g' 			=>  array ( 0147, 0147, 0147, 0147 ),
		'germandbls'		=>  array ( 0373, 0247, 0337, 0337 ),
		'grave' 		=>  array ( 0301, 0140, 0140, 0140 ),
		'greater' 		=>  array ( 0076, 0076, 0076, 0076 ),
		'guillemotleft'		=>  array ( 0253, 0307, 0253, 0253 ),
		'guillemotright' 	=>  array ( 0273, 0310, 0273, 0273 ),
		'guilsinglleft'		=>  array ( 0254, 0334, 0213, 0210 ),
		'guilsinglright'	=>  array ( 0255, 0335, 0233, 0211 ),
		'h'			=>  array ( 0150, 0150, 0150, 0150 ),
		'hungarumlaut'		=>  array ( 0315, 0375,    0, 0034 ),
		'hyphen' 		=>  array ( 0x2D, 0x2D, 0x2D, 0x2D ),
		'i' 			=>  array ( 0151, 0151, 0151, 0151 ),
		'iacute'		=>  array (    0, 0222, 0355, 0355 ),
		'icircumflex' 		=>  array (    0, 0224, 0356, 0356 ),
		'idieresis'		=>  array (    0, 0225, 0357, 0357 ),
		'igrave' 		=>  array (    0, 0223, 0354, 0354 ),
		'j' 			=>  array ( 0152, 0152, 0152, 0152 ),
		'k' 			=>  array ( 0153, 0153, 0153, 0153 ),
		'l' 			=>  array ( 0154, 0154, 0154, 0154 ),
		'less'			=>  array ( 0074, 0074, 0074, 0074 ),
		'logicalnot' 		=>  array (    0, 0302, 0254, 0254 ),
		'lslash'		=>  array ( 0x0142, 0x0142, 0x0142, 0x0142 ),
		'm'			=>  array ( 0155, 0155, 0155, 0155 ),
		'macron'		=>  array ( 0305, 0370, 0257, 0257 ),
		'minus' 		=>  array ( 0x2D, 0x2D, 0x2D, 0x2D ),
		'mu' 			=>  array (    0, 0265, 0265, 0265 ),
		'multiply'		=>  array (    0,    0, 0327, 0327 ),
		'n' 			=>  array ( 0156, 0156, 0156, 0156 ),
		'nine' 			=>  array ( 0071, 0071, 0071, 0071 ),
		'ntilde' 		=>  array (    0, 0226, 0361, 0361 ),
		'numbersign' 		=>  array ( 0043, 0043, 0043, 0043 ),
		'o'			=>  array ( 0157, 0157, 0157, 0157 ),
		'oacute' 		=>  array (    0, 0227, 0363, 0363 ),
		'ocircumflex' 		=>  array (    0, 0231, 0364, 0364 ),
		'odieresis'		=>  array (    0, 0232, 0366, 0366 ),
		'oe' 			=>  array ( 0372, 0317, 0234, 0234 ),
		'ogonek' 		=>  array ( 0x2DB, 0x2DB, 0x2DB, 0x2DB ),
		'ograve'		=>  array (    0, 0230, 0362, 0362 ),
		'one' 			=>  array ( 0061, 0061, 0061, 0061 ),
		'onehalf' 		=>  array (    0,    0, 0275, 0275 ),
		'onequarter' 		=>  array (    0,    0, 0274, 0274 ),
		'onesuperior'		=>  array (    0,    0, 0271, 0271 ),
		'ordfeminine' 		=>  array ( 0343, 0273, 0252, 0252 ),
		'ordmasculine' 		=>  array ( 0353, 0274, 0272, 0272 ),
		'oslash'		=>  array ( 0371, 0277, 0370, 0370 ),
		'otilde' 		=>  array (    0, 0233, 0365, 0365 ),
		'p'			=>  array ( 0160, 0160, 0160, 0160 ),
		'paragraph' 		=>  array ( 0266, 0246, 0266, 0266 ),
		'parenleft' 		=>  array ( 0050, 0050, 0050, 0050 ),
		'parenright'		=>  array ( 0051, 0051, 0051, 0051 ),
		'percent' 		=>  array ( 0045, 0045, 0045, 0045 ),
		'period' 		=>  array ( 0056, 0056, 0056, 0056 ),
		'periodcentered'	=>  array ( 0264, 0341, 0267, 0267 ),
		'perthousand' 		=>  array ( 0275, 0344, 0211, 0213 ),
		'plus' 			=>  array ( 0053, 0053, 0053, 0053 ),
		'plusminus' 		=>  array (    0, 0261, 0261, 0261 ),
		'q' 			=>  array ( 0161, 0161, 0161, 0161 ),
		'question' 		=>  array ( 0077, 0077, 0077, 0077 ),
		'questiondown' 		=>  array ( 0277, 0300, 0277, 0277 ),
		'quotedbl' 		=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'quotedblbase' 		=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'quotedblleft'		=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'quotedblright'		=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'quoteleft' 		=>  array ( 0x27, 0x27, 0x27, 0x27 ),
		'quoteright'		=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'quotesinglbase'	=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'quotesingle'		=>  array ( 0x22, 0x22, 0x22, 0x22 ),
		'r'			=>  array ( 0162, 0162, 0162, 0162 ),
		'registered' 		=>  array (    0, 0250, 0256, 0256 ),
		'ring' 			=>  array ( 0312, 0373, 0xB0, 0036 ),
		's'			=>  array ( 0163, 0163, 0163, 0163 ),
		'scaron'		=>  array (    0,    0, 0232, 0235 ),
		'section'		=>  array ( 0247, 0244, 0247, 0247 ),
		'semicolon' 		=>  array ( 0073, 0073, 0073, 0073 ),
		'seven' 		=>  array ( 0067, 0067, 0067, 0067 ),
		'six' 			=>  array ( 0066, 0066, 0066, 0066 ),
		'slash' 		=>  array ( 0057, 0057, 0057, 0057 ),
		'space' 		=>  array ( 0040, 0040, 0040, 0040 ),
		'sterling'		=>  array ( 0243, 0243, 0243, 0243 ),
		't'			=>  array ( 0164, 0164, 0164, 0164 ),
		'thorn' 		=>  array (    0,    0, 0376, 0376 ),
		'three'			=>  array ( 0063, 0063, 0063, 0063 ),
		'threequarters'		=>  array (    0,    0, 0276, 0276 ),
		'threesuperior' 	=>  array (    0,    0, 0263, 0263 ),
		'tilde'			=>  array ( 0304, 0367, 0230, 0037 ),
		'trademark' 		=>  array (    0, 0252, 0231, 0222 ),
		'two' 			=>  array ( 0062, 0062, 0062, 0062 ),
		'twosuperior'		=>  array (    0,    0, 0262, 0262 ),
		'u' 			=>  array ( 0165, 0165, 0165, 0165 ),
		'uacute'		=>  array (    0, 0234, 0372, 0372 ),
		'ucircumflex' 		=>  array (    0, 0236, 0373, 0373 ),
		'udieresis'		=>  array (    0, 0237, 0374, 0374 ),
		'ugrave' 		=>  array (    0, 0235, 0371, 0371 ),
		'underscore' 		=>  array ( 0137, 0137, 0137, 0137 ),
		'v' 			=>  array ( 0166, 0166, 0166, 0166 ),
		'w' 			=>  array ( 0167, 0167, 0167, 0167 ),
		'x' 			=>  array ( 0170, 0170, 0170, 0170 ),
		'y' 			=>  array ( 0171, 0171, 0171, 0171 ),
		'yacute' 		=>  array (    0,    0, 0375, 0375 ),
		'ydieresis' 		=>  array (    0, 0330, 0377, 0377 ),
		'yen' 			=>  array ( 0245, 0264, 0245, 0245 ),
		'z'			=>  array ( 0172, 0172, 0172, 0172 ),
		'zcaron' 		=>  array (    0,    0, 0236, 0236 ),
		'zero' 			=>  array ( 0060, 0060, 0060, 0060 ),

		// Additions which are not described in the PDF specifications - much more foreign characters are available !
		// (see https://mupdf.com/docs/browse/source/pdf/pdf-glyphlist.h.html)
		// The following also gives some glyph names :
		//	http://www.tipometar.org/pojmovnik/Hint/img/Using%20Fontographer.pdf
		// This table is currently far from being complete
		'Abreve'		=>  array ( 0x0102, 0x0102, 0x0102, 0x0102 ),
		'abreve'		=>  array ( 0x0103, 0x0103, 0x0103, 0x0103 ),
		'Acaron'		=>  array ( 0x01CD, 0x01CD, 0x01CD, 0x01CD ),
		'acaron'		=>  array ( 0x01CE, 0x01CE, 0x01CE, 0x01CE ),
		'Adot'			=>  array ( 0x0226, 0x0226, 0x0226, 0x0226 ),
		'adot'			=>  array ( 0x0227, 0x0227, 0x0227, 0x0227 ),
		'Ahookabove'		=>  array ( 0x1EA2, 0x1EA2, 0x1EA2, 0x1EA2 ),
		'ahookabove'		=>  array ( 0x1EA3, 0x1EA3, 0x1EA3, 0x1EA3 ),
		'Amacron'		=>  array ( 0x0100, 0x0100, 0x0100, 0x0100 ),
		'amacron'		=>  array ( 0x0101, 0x0101, 0x0101, 0x0101 ),
		'Aogonek'		=>  array ( 0x0104, 0x0104, 0x0104, 0x0104 ),
		'aogonek'		=>  array ( 0x0105, 0x0105, 0x0105, 0x0105 ),
		'Aring'			=>  array ( 0x00C5, 0x00C5, 0x00C5, 0x00C5 ),
		'aring'			=>  array ( 0x00E5, 0x00E5, 0x00E5, 0x00E5 ),
		'Cacute'		=>  array ( 0x0106, 0x0106, 0x0106, 0x0106 ),
		'cacute'		=>  array ( 0x0107, 0x0107, 0x0107, 0x0107 ),
		'Ccaron'		=>  array ( 0x010C, 0x010C, 0x010C, 0x010C ),
		'ccaron'		=>  array ( 0x010D, 0x010D, 0x010D, 0x010D ),
		'DCaron'		=>  array ( 0x010E, 0x010E, 0x010E, 0x010E ),
		'dCaron'		=>  array ( 0x010F, 0x010F, 0x010F, 0x010F ),
		'Dmacron'		=>  array ( 0x0110, 0x0110, 0x0110, 0x0110 ),
		'dmacron'		=>  array ( 0x0111, 0x0111, 0x0111, 0x0111 ),
		'Ebreve'		=>  array ( 0x0114, 0x0114, 0x0114, 0x0114 ),
		'ebreve'		=>  array ( 0x0115, 0x0115, 0x0115, 0x0115 ),
		'Ecaron'		=>  array ( 0x011A, 0x011A, 0x011A, 0x011A ),
		'ecaron'		=>  array ( 0x011B, 0x011B, 0x011B, 0x011B ),
		'Edot'			=>  array ( 0x0116, 0x0116, 0x0116, 0x0116 ),
		'edot'			=>  array ( 0x0117, 0x0117, 0x0117, 0x0117 ),
		'Ehookabove'		=>  array ( 0x1EBA, 0x1EBA, 0x1EBA, 0x1EBA ),
		'ehookabove'		=>  array ( 0x1EBB, 0x1EBB, 0x1EBB, 0x1EBB ),
		'Emacron'		=>  array ( 0x0112, 0x0112, 0x0112, 0x0112 ),
		'emacron'		=>  array ( 0x0113, 0x0113, 0x0113, 0x0113 ),
		'Eogonek'		=>  array ( 0x0118, 0x0118, 0x0118, 0x0118 ),
		'eogonek'		=>  array ( 0x0119, 0x0119, 0x0119, 0x0119 ),
		'Ering'			=>  array ( 0x016E, 0x016E, 0x016E, 0x016E ),
		'ering'			=>  array ( 0x016F, 0x016F, 0x016F, 0x016F ),
		'Gbreve'		=>  array ( 0x011E, 0x011E, 0x011E, 0x011E ),
		'gbreve'		=>  array ( 0x011F, 0x011F, 0x011F, 0x011F ),
		'Gcaron'		=>  array ( 0x01E6, 0x01E6, 0x01E6, 0x01E6 ),
		'gcaron'		=>  array ( 0x01E7, 0x01E7, 0x01E7, 0x01E7 ),
		'Hcaron'		=>  array ( 0x021E, 0x021E, 0x021E, 0x021E ),
		'hcaron'		=>  array ( 0x021F, 0x021F, 0x021F, 0x021F ),
		'Ibreve'		=>  array ( 0x012C, 0x012C, 0x012C, 0x012C ),
		'ibreve'		=>  array ( 0x012D, 0x012D, 0x012D, 0x012D ),
		'Icaron'		=>  array ( 0x01CF, 0x01CF, 0x01CF, 0x01CF ),
		'icaron'		=>  array ( 0x01D0, 0x01D0, 0x01D0, 0x01D0 ),
		'Idotaccent'		=>  array ( 0x00CD, 0x00CD, 0x00CD, 0x00CD ),
		'idotaccent'		=>  array ( 0x00ED, 0x00ED, 0x00ED, 0x00ED ),
		'Ihookabove'		=>  array ( 0x1EC8, 0x1EC8, 0x1EC8, 0x1EC8 ),
		'ihookabove'		=>  array ( 0x1EC9, 0x1EC9, 0x1EC9, 0x1EC9 ),
		'Imacron'		=>  array ( 0x012A, 0x012A, 0x012A, 0x012A ),
		'Imacron'		=>  array ( 0x012B, 0x012B, 0x012B, 0x012B ),
		'Iogonek'		=>  array ( 0x012E, 0x012E, 0x012E, 0x012E ),
		'iogonek'		=>  array ( 0x012F, 0x012F, 0x012F, 0x012F ),
		'Jcaron'		=>  array ( 0x01F0, 0x01F0, 0x01F0, 0x01F0 ),
		'jcaron'		=>  array ( 0x01EF, 0x01EF, 0x01EF, 0x01EF ),
		'kcaron'		=>  array ( 0x01E9, 0x01E9, 0x01E9, 0x01E9 ),
		'Kcaron'		=>  array ( 0x01E8, 0x01E8, 0x01E8, 0x01E8 ),
		'lcaron'		=>  array ( 0x013E, 0x013E, 0x013E, 0x013E ),
		'Lcaron'		=>  array ( 0x013D, 0x013D, 0x013D, 0x013D ),
		'nacute'		=>  array ( 0x0144, 0x0144, 0x0144, 0x0144 ),
		'Nacute'		=>  array ( 0x0143, 0x0143, 0x0143, 0x0143 ),
		'ncaron'		=>  array ( 0x0148, 0x0148, 0x0148, 0x0148 ),
		'Ncaron'		=>  array ( 0x0147, 0x0147, 0x0147, 0x0147 ),
		'Ocaron'		=>  array ( 0x01D1, 0x01D1, 0x01D1, 0x01D1 ),
		'ocaron'		=>  array ( 0x01D2, 0x01D2, 0x01D2, 0x01D2 ),
		'Odot'			=>  array ( 0x022E, 0x022E, 0x022E, 0x022E ),
		'odot'			=>  array ( 0x022F, 0x022F, 0x022F, 0x022F ),
		'Odblacute'		=>  array ( 0x0150, 0x0150, 0x0150, 0x0150 ),
		'odblacute'		=>  array ( 0x0151, 0x0151, 0x0151, 0x0151 ),
		'Ohookabove'		=>  array ( 0x1ECE, 0x1ECE, 0x1ECE, 0x1ECE ),
		'ohookabove'		=>  array ( 0x1ECF, 0x1ECF, 0x1ECF, 0x1ECF ),
		'Ohungarumlaut'		=>  array ( 0x0150, 0x0150, 0x0150, 0x0150 ),
		'ohungarumlaut'		=>  array ( 0x0151, 0x0151, 0x0151, 0x0151 ),
		'Ohm'			=>  array ( 0x2126, 0x2126, 0x2126, 0x2126 ),
		'ohm'			=>  array ( 0x03C9, 0x03C9, 0x03C9, 0x03C9 ),
		'omacron'		=>  array ( 0x014C, 0x014C, 0x014C, 0x014C ),
		'Omacron'		=>  array ( 0x014D, 0x014D, 0x014D, 0x014D ),
		'Oogonek'		=>  array ( 0x01EA, 0x01EA, 0x01EA, 0x01EA ),
		'oogonek'		=>  array ( 0x01EB, 0x01EB, 0x01EB, 0x01EB ),
		'rcaron'		=>  array ( 0x0158, 0x0158, 0x0158, 0x0158 ),
		'Rcaron'		=>  array ( 0x0159, 0x0159, 0x0159, 0x0159 ),
		'Sacute'		=>  array ( 0x015A, 0x015A, 0x015A, 0x015A ),
		'sacute'		=>  array ( 0x015B, 0x015B, 0x015B, 0x015B ),
		'Scaron'		=>  array ( 0x0160, 0x0160, 0x0160, 0x0160 ),
		'scaron'		=>  array ( 0x0161, 0x0161, 0x0161, 0x0161 ),
		'Scedilla'		=>  array ( 0x015E, 0x015E, 0x015E, 0x015E ),
		'scedilla'		=>  array ( 0x015F, 0x015F, 0x015F, 0x015F ),
		'Scircumflex'		=>  array ( 0x015C, 0x015C, 0x015C, 0x015C ),
		'scircumflex'		=>  array ( 0x015D, 0x015D, 0x015D, 0x015D ),
		'Tcaron'		=>  array ( 0x0164, 0x0164, 0x0164, 0x0164 ),
		'tcaron'		=>  array ( 0x0165, 0x0165, 0x0165, 0x0165 ),
		'Ubreve'		=>  array ( 0x016C, 0x016C, 0x016C, 0x016C ),
		'ubreve'		=>  array ( 0x016D, 0x016D, 0x016D, 0x016D ),
		'Ucaron'		=>  array ( 0x01D3, 0x01D3, 0x01D3, 0x01D3 ),
		'uCaron'		=>  array ( 0x01D4, 0x01D4, 0x01D4, 0x01D4 ),
		'Udblacute'		=>  array ( 0x0170, 0x0170, 0x0170, 0x0170 ),
		'udblacute'		=>  array ( 0x0171, 0x0171, 0x0171, 0x0171 ),
		'Uhookabove'		=>  array ( 0x1EE6, 0x1EE6, 0x1EE6, 0x1EE6 ),
		'uhookabove'		=>  array ( 0x1EE7, 0x1EE7, 0x1EE7, 0x1EE7 ),
		'Uhungarumlaut'		=>  array ( 0x0170, 0x0170, 0x0170, 0x0170 ),
		'uhungarumlaut'		=>  array ( 0x0171, 0x0171, 0x0171, 0x0171 ),
		'Umacron'		=>  array ( 0x016A, 0x016A, 0x016A, 0x016A ),
		'umacron'		=>  array ( 0x016B, 0x016B, 0x016B, 0x016B ),
		'Uogonek'		=>  array ( 0x0172, 0x0172, 0x0172, 0x0172 ),
		'uogonek'		=>  array ( 0x0173, 0x0173, 0x0173, 0x0173 ),
		'Uring'			=>  array ( 0x016E, 0x016E, 0x016E, 0x016E ),
		'uring'			=>  array ( 0x016F, 0x016F, 0x016F, 0x016F ),
		'upsilondieresis'	=>  array ( 0x00FF, 0x00FF, 0x00FF, 0x00FF ),
		'Upsilondieresis'	=>  array ( 0x0178, 0x0178, 0x0178, 0x0178 ),
		'zacute'		=>  array ( 0x017A, 0x017A, 0x017A, 0x017A ),
		'Zacute'		=>  array ( 0x0179, 0x0179, 0x0179, 0x0179 ),
		'Zcaron'		=>  array ( 0x017E, 0x017E, 0x017E, 0x017E ),
		'zcaron'		=>  array ( 0x017D, 0x017D, 0x017D, 0x017D ),
		'zdot'			=>  array ( 0x017C, 0x017C, 0x017C, 0x017C ),
		'Zdot'			=>  array ( 0x017B, 0x017B, 0x017B, 0x017B ),
		'zdotaccent'		=>  array ( 0x017C, 0x017C, 0x017C, 0x017C ),
		'Zdotaccent'		=>  array ( 0x017B, 0x017B, 0x017B, 0x017B ),

		// Special symbols
		'approxequal'		=>  array ( 0x2248, 0x2248, 0x2248, 0x2248 ),
		'arrowleft'		=>  array ( 0x2190, 0x2190, 0x2190, 0x2190 ),
		'arrowright'		=>  array ( 0x2192, 0x2192, 0x2192, 0x2192 ),
		'congruent'		=>  array ( 0x2261, 0x2261, 0x2261, 0x2261 ),
		'emptyset'		=>  array ( 0x2205, 0x2205, 0x2205, 0x2205 ),
		'filledbox'		=>  array ( 0x25A0, 0x25A0, 0x25A0, 0x25A0 ),
		'greaterequal'		=>  array ( 0x2265, 0x2265, 0x2265, 0x2265 ),
		'increment'		=>  array ( 0x2206, 0x2206, 0x2206, 0x2206 ),
		'lessequal'		=>  array ( 0x2264, 0x2264, 0x2264, 0x2264 ),
		'middot'		=>  array ( 0x00B7, 0x00B7, 0x00B7, 0x00B7 ),
		'notequal'		=>  array ( 0x2260, 0x2260, 0x2260, 0x2260 ),
		'parenleftbt'		=>  array ( 0x0028, 0x0028, 0x0028, 0x0028 ),
		'parenleftex'		=>  array ( 0x0028, 0x0028, 0x0028, 0x0028 ),
		'parenlefttp'		=>  array ( 0x0028, 0x0028, 0x0028, 0x0028 ),
		'parenrightbt'		=>  array ( 0x0029, 0x0029, 0x0029, 0x0029 ),
		'parenrightex'		=>  array ( 0x0029, 0x0029, 0x0029, 0x0029 ),
		'parenrighttp'		=>  array ( 0x0029, 0x0029, 0x0029, 0x0029 ),
		'radical'		=>  array ( 0x23B7, 0x23B7, 0x23B7, 0x23B7 ),
		'similar'		=>  array ( 0x2242, 0x2242, 0x2242, 0x2242 ),
		'summation'		=>  array ( 0x2211, 0x2211, 0x2211, 0x2211 ),
		'underscoredbl'		=>  array ( 0x005F, 0x005F, 0x005F, 0x005F ),

		// Greek characters
		'Alpha'			=>  array ( 0x0391, 0x0391, 0x0391, 0x0391 ),
		'alpha'			=>  array ( 0x03B1, 0x03B1, 0x03B1, 0x03B1 ),
		'Beta'			=>  array ( 0x0392, 0x0392, 0x0392, 0x0392 ),
		'beta'			=>  array ( 0x03B2, 0x03B2, 0x03B2, 0x03B2 ),
		'Gamma'			=>  array ( 0x0393, 0x0393, 0x0393, 0x0393 ),
		'gamma'			=>  array ( 0x03B3, 0x03B3, 0x03B3, 0x03B3 ),
		'Delta'			=>  array ( 0x0394, 0x0394, 0x0394, 0x0394 ),
		'delta'			=>  array ( 0x03B4, 0x03B4, 0x03B4, 0x03B4 ),
		'Epsilon'		=>  array ( 0x0395, 0x0395, 0x0395, 0x0395 ),
		'epsilon'		=>  array ( 0x03B5, 0x03B5, 0x03B5, 0x03B5 ),
		'Zeta'			=>  array ( 0x0396, 0x0396, 0x0396, 0x0396 ),
		'zeta'			=>  array ( 0x03B6, 0x03B6, 0x03B6, 0x03B6 ),
		'Eta'			=>  array ( 0x0397, 0x0397, 0x0397, 0x0397 ),
		'eta'			=>  array ( 0x03B7, 0x03B7, 0x03B7, 0x03B7 ),
		'Theta'			=>  array ( 0x0398, 0x0398, 0x0398, 0x0398 ),
		'theta'			=>  array ( 0x03B8, 0x03B8, 0x03B8, 0x03B8 ),
		'Iota'			=>  array ( 0x0399, 0x0399, 0x0399, 0x0399 ),
		'iota'			=>  array ( 0x03B9, 0x03B9, 0x03B9, 0x03B9 ),
		'Iotatonos'		=>  array ( 0x038A, 0x038A, 0x038A, 0x038A ),
		'iotatonos'		=>  array ( 0x03AF, 0x03AF, 0x03AF, 0x03AF ),
		'Kappa'			=>  array ( 0x039A, 0x039A, 0x039A, 0x039A ),
		'kappa'			=>  array ( 0x03BA, 0x03BA, 0x03BA, 0x03BA ),
		'Lambda'		=>  array ( 0x039B, 0x039B, 0x039B, 0x039B ),
		'lambda'		=>  array ( 0x03BB, 0x03BB, 0x03BB, 0x03BB ),
		'Mu'			=>  array ( 0x039C, 0x039C, 0x039C, 0x039C ),
		'mu'			=>  array ( 0x03BC, 0x03BC, 0x03BC, 0x03BC ),
		'Mu1'			=>  array ( 0x039C, 0x039C, 0x039C, 0x039C ),
		'mu1'			=>  array ( 0x03BC, 0x03BC, 0x03BC, 0x03BC ),
		'Nu'			=>  array ( 0x039D, 0x039D, 0x039D, 0x039D ),
		'nu'			=>  array ( 0x03BD, 0x03BD, 0x03BD, 0x03BD ),
		'Xi'			=>  array ( 0x039E, 0x039E, 0x039E, 0x039E ),
		'xi'			=>  array ( 0x03BE, 0x03BE, 0x03BE, 0x03BE ),
		'Omicron'		=>  array ( 0x039F, 0x039F, 0x039F, 0x039F ),
		'omicron'		=>  array ( 0x03BF, 0x03BF, 0x03BF, 0x03BF ),
		'Omicrontonos'		=>  array ( 0x038C, 0x038C, 0x038C, 0x038C ),
		'omicrontonos'		=>  array ( 0x03CC, 0x03CC, 0x03CC, 0x03CC ),
		'Pi'			=>  array ( 0x03A0, 0x03A0, 0x03A0, 0x03A0 ),
		'pi'			=>  array ( 0x03C0, 0x03C0, 0x03C0, 0x03C0 ),
		'Rho'			=>  array ( 0x03A1, 0x03A1, 0x03A1, 0x03A1 ),
		'rho'			=>  array ( 0x03C1, 0x03C1, 0x03C1, 0x03C1 ),
		'Sigma'			=>  array ( 0x03A3, 0x03A3, 0x03A3, 0x03A3 ),
		'sigma'			=>  array ( 0x03C3, 0x03C3, 0x03C3, 0x03C3 ),
		'Tau'			=>  array ( 0x03A4, 0x03A4, 0x03A4, 0x03A4 ),
		'tau'			=>  array ( 0x03C4, 0x03C4, 0x03C4, 0x03C4 ),
		'Upsilon'		=>  array ( 0x03A5, 0x03A5, 0x03A5, 0x03A5 ),
		'upsilon'		=>  array ( 0x03C5, 0x03C5, 0x03C5, 0x03C5 ),
		'Upsilontonos'		=>  array ( 0x038E, 0x038E, 0x038E, 0x038E ),
		'upsilontonos'		=>  array ( 0x03CD, 0x03CD, 0x03CD, 0x03CD ),
		'Phi'			=>  array ( 0x03A6, 0x03A6, 0x03A6, 0x03A6 ),
		'phi'			=>  array ( 0x03C6, 0x03C6, 0x03C6, 0x03C6 ),
		'Chi'			=>  array ( 0x03A7, 0x03A7, 0x03A7, 0x03A7 ),
		'chi'			=>  array ( 0x03C7, 0x03C7, 0x03C7, 0x03C7 ),
		'Psi'			=>  array ( 0x03A8, 0x03A8, 0x03A8, 0x03A8 ),
		'psi'			=>  array ( 0x03C8, 0x03C8, 0x03C8, 0x03C8 ),
		'Omega'			=>  array ( 0x03A9, 0x03A9, 0x03A9, 0x03A9 ),
		'omega'			=>  array ( 0x03C9, 0x03C9, 0x03C9, 0x03C9 ),
		'Omegatonos'		=>  array ( 0x038F, 0x038F, 0x038F, 0x038F ),
		'omegatonos'		=>  array ( 0x03CE, 0x03CE, 0x03CE, 0x03CE ),

		// Don't know if these ones are official...
		'a0'			=>  array ( 0x002D, 0x002D, 0x002D, 0x002D ),		// A long hyphen
		'a1'			=>  array ( 0x2192, 0x2192, 0x2192, 0x2192 ),		// Right arrow
		'a2'			=>  array ( 0x002D, 0x002D, 0x002D, 0x002D ),		// Another hyphen, not so long

		// Special very old characters. See :
		//	http://www.tipometar.org/pojmovnik/Hint/img/Using%20Fontographer.pdf
		//	ftp://ftp.software.ibm.com/software/globalization/gcoc/attachments/CP00437.pdf
		//	http://jrgraphix.net/r/Unicode/2500-257F
		//	http://www.alanwood.net/demos/wingdings.html
		// Almost everything is in the links ; the table blow needs to be completed, though
		'.notdef'		=>  array ( 0x0020, 0x0020, 0x0020, 0x0020 ),		// Undefined (?)
		'afii00208'		=>  array ( 0x002D, 0x002D, 0x002D, 0x002D ),		// Minus
		'H18543'		=>  array ( 0x25A0, 0x25A0, 0x25A0, 0x25A0 ),		// Black square
		'H18533'		=>  array ( 0x25CF, 0x25CF, 0x25CF, 0x25CF ),		// Black circle
		'H22073'		=>  array ( 0x25A1, 0x25A1, 0x25A1, 0x25A1 ),		// White square
		'SF070000'		=>  array ( 0x2534, 0x2534, 0x2534, 0x2534 ),		// Semi-graphic
		'SF100000'		=>  array ( 0x2501, 0x2501, 0x2501, 0x2501 ),

		// Wingdings
		'barb2left'		=>  array ( 0x1F868, 0x1F868, 0x1F868, 0x1F868 ),	// Wide-headed leftwards barb arrow
		'barb2right'		=>  array ( 0x1F86A, 0x1F86A, 0x1F86A, 0x1F86A ),	// Wide-headed rightwards barb arrow
		'barb2up'		=>  array ( 0x1F869, 0x1F869, 0x1F869, 0x1F869 ),	// Wide-headed upwards barb arrow
		'barb2down'		=>  array ( 0x1F86B, 0x1F86B, 0x1F86B, 0x1F86B ),	// Wide-headed downwards barb arrow
		'barb2nw'		=>  array ( 0x1F86C, 0x1F86C, 0x1F86C, 0x1F86C ),	// Wide-headed north west barb arrow
		'barb2ne'		=>  array ( 0x1F86D, 0x1F86D, 0x1F86D, 0x1F86D ),	// Wide-headed north east barb arrow
		'barb2sw'		=>  array ( 0x1F86F, 0x1F86F, 0x1F86F, 0x1F86F ),	// Wide-headed south west barb arrow
		'barb2se'		=>  array ( 0x1F86E, 0x1F86E, 0x1F86E, 0x1F86E ),	// Wide-headed south east barb arrow
		'barb4left'		=>  array ( 0x1F878, 0x1F878, 0x1F878, 0x1F878 ),	// Wide-headed leftwards barb arrow
		'barb4right'		=>  array ( 0x1F87A, 0x1F87A, 0x1F87A, 0x1F87A ),	// Wide-headed rightwards barb arrow
		'barb4up'		=>  array ( 0x1F879, 0x1F879, 0x1F879, 0x1F879 ),	// Wide-headed upwards barb arrow
		'barb4down'		=>  array ( 0x1F87B, 0x1F87B, 0x1F87B, 0x1F87B ),	// Wide-headed downwards barb arrow
		'barb4nw'		=>  array ( 0x1F87C, 0x1F87C, 0x1F87C, 0x1F87C ),	// Wide-headed north west barb arrow
		'barb4ne'		=>  array ( 0x1F87D, 0x1F87D, 0x1F87D, 0x1F87D ),	// Wide-headed north east barb arrow
		'barb4sw'		=>  array ( 0x1F87F, 0x1F87F, 0x1F87F, 0x1F87F ),	// Wide-headed south west barb arrow
		'barb4se'		=>  array ( 0x1F87E, 0x1F87E, 0x1F87E, 0x1F87E ),	// Wide-headed south east barb arrow
		'checkbld'		=>  array ( 0x2714, 0x2714, 0x2714, 0x2714 ),		// Heavy checkmark
		'diamond'		=>  array ( 0x2666, 0x2666, 0x2666, 0x2666 ),
		'head2left'		=>  array ( 0x2B98, 0x2B98, 0x2B98, 0x2B98 ),
		'head2right'		=>  array ( 0x2B9A, 0x2B9A, 0x2B9A, 0x2B9A ),
		'head2up'		=>  array ( 0x2B99, 0x2B99, 0x2B99, 0x2B99 ),
		'head2down'		=>  array ( 0x2B9B, 0x2B9B, 0x2B9B, 0x2B9B ),
		'openbullet'		=>  array ( 0x25E6, 0x25E6, 0x25E6, 0x25E6 ),
		'square2'		=>  array ( 0x25AA, 0x25AA, 0x25AA, 0x25AA ),
		'square4'		=>  array ( 0x25AA, 0x25AA, 0x25AA, 0x25AA ),
		'square6'		=>  array ( 0x25A0, 0x25A0, 0x25A0, 0x25A0 ),
		'xrhombus'		=>  array ( 0x2756, 0x2756, 0x2756, 0x2756 ),

		// "Entities" found in some documents, but their length made it difficult to locate the entity reference
		// within the PDF file ; their names are not meaningful enough to extrapolate their Unicode equivalent :
		// . f02d
		// . /Gxx, which do not seem to function as /gxx
		// . arrowhorizex
	   ) ;


